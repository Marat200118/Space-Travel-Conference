---
import BaseLayout from "../layouts/BaseLayout.astro";
import fetchApi from "../lib/strapi.js";

const talks = await fetchApi({
  endpoint: "talks",
  wrappedByKey: "data",
  query: { populate: ["*", "location", "speaker"] },
});

const groupedTalks = {};

talks.forEach((talk) => {
  const locationName = talk.attributes.location.data.attributes.name;
  const talkDate = new Date(talk.attributes.date);

  if (!groupedTalks[locationName]) {
    groupedTalks[locationName] = {};
  }

  const day = talkDate.getDate();
  const month = talkDate.getMonth() + 1;

  const formattedDate = `${day}/${month}/${talkDate.getFullYear()}`;

  if (!groupedTalks[locationName][formattedDate]) {
    groupedTalks[locationName][formattedDate] = [];
  }

  groupedTalks[locationName][formattedDate].push(talk);
});

for (const location in groupedTalks) {
  for (const day in groupedTalks[location]) {
    groupedTalks[location][day].sort((a, b) => {
      const timeA = new Date(`2000-01-01T${a.attributes.time}`);
      const timeB = new Date(`2000-01-01T${b.attributes.time}`);
      return timeA - timeB;
    });
  }
}
---

<BaseLayout>
  <section class="schedule">
    <h2>Conference Schedule</h2>
    {Object.entries(groupedTalks).map(([location, locationDays]) => (
      <div key={location} class="location-schedule">
        <h3 class="schedule-heading">{location}</h3>
        <div class="schedule-columns" id={location}>
          {Object.entries(locationDays).map(([day, dayTalks]) => (
            <div key={day} class="day-column">
              <h4 class="schedule-heading">{day}</h4>
              <ul class="talks-list">
                {dayTalks.map((talk) => (
                  <li key={talk.id} class="talk-item">
                    <p class="talk-name">{talk.attributes.name}</p>
                    <p class="time">{talk.attributes.time.split(':').slice(0, 2).join(':')}</p>
                    <p>Speaker: {talk.attributes.speaker.data.attributes.name}</p>
                    <a href={`${import.meta.env.BASE_URL}/talks/${talk.id}`}>Details</a>
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </div>
      </div>
    ))}
  </section>
</BaseLayout>


<style>
  .schedule-heading {
    text-align: center;
    margin: 1rem;
    font-weight: bold;
  }

  #Paris {
    flex-direction: row-reverse;
  }

  .schedule {
    padding: 4rem 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .location-schedule {
    margin-bottom: 2rem;
    margin-top: 2rem;
  }

  .talk-name {
    font-weight: bold;
  }

  .talks-list {
    list-style: none;
    padding: 0;
  }

  .time {
    font-weight: bold;
    font-style: italic;
  }

  .talk-item {
    width: 30rem;
    margin-bottom: 1rem;
    background-color: var(--color-accent);
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .talk-item a {
    color: var(--color-primary);
    background-color: var(--color-secondary);
    width: fit-content;
    padding: 0.8rem;
    border-radius: 0.2rem;
    font-weight: bold;
    margin: 1rem;
    text-decoration: none;
  }

  .schedule-columns {
    display: flex;
    flex-direction: row;
    gap: 20px;
  }

  .day-column {
    flex: 1;
  }

</style>